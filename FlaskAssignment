1. Create a Flask application with an /api route. When this route is accessed, it should return a JSON list. The data should be stored in a backend file, read from it, and sent as a response.
Ans:
Install Flask
piip3 install Flask'

Create a JSON file 'dataa.json' with some sample list data:
[
    {"id": 1, "name": "Alice"},
    {"id": 2, "name": "Bob"},
    {"id": 3, "name": "Charlie"}
]

Create app.py
from flask import Flask, jsonify
import json

app = Flask(__name__)

@app.route('/api')
def api_data():
    try:
        with open('dataa.json') as f:
            data = json.load(f)
        return jsonify(data)
    except Exception as e:
        return jsonify({"error": str(e)}), 500

if __name__ == '__main__':
    app.run(debug=True)


Run app
python3 app.py


2. Create a form on the frontend that, when submitted, inserts data into MongoDB Atlas. Upon successful submission, the user should be redirected to another page displaying the message "Data submitted successfully". If there's an error during submission, display the error on the same page without redirection.
Ans:
Install the required packages:
python3 -m pip install "pymongo[srv]==4.1"

Created cluster on mongo atlas. then created database and collection.

Create template/form.html

<!DOCTYPE html>
<html>
<head>
    <title>Simple Form</title>
</head>
<body>
    <h2>Enter Details</h2>

    {% if error %}
        <p style="color:red;">{{ error }}</p>
    {% endif %}

    <form method="POST">
        Name: <input type="text" name="name"><br><br>
        Age: <input type="text" name="age"><br><br>
        City: <input type="text" name="city"><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>

Create app.py

from flask import Flask, render_template, request, redirect, url_for
from pymongo import MongoClient
from pymongo.errors import PyMongoError

app = Flask(__name__)

# Replace this with your actual MongoDB connection string
client = MongoClient("mongodb+srv://<myusername>:<mypassword>@learnmongo.igevijc.mongodb.net/?retryWrites=true&w=majority&appName=learnmongo")
db = client["flaskapp"]
collection = db["flaskapp"]

@app.route('/', methods=['GET', 'POST'])
def form():
    if request.method == 'POST':
        name = request.form.get('name')
        age = request.form.get('age')
        city = request.form.get('city')

        if not name or not age or not city:
            error = "All fields are required!"
            return render_template('form.html', error=error)

        # Try inserting into MongoDB
        try:
            collection.insert_one({
                "name": name,
                "age": int(age),  # Optional: convert age to integer
                "city": city
            })
            return redirect(url_for('form_submitted'))
        except PyMongoError as e:
            error = f"Database error: {e}"
            return render_template('form.html', error=error)

    return render_template('form.html')

@app.route('/formsubmitted')
def form_submitted():
    return "Form submitted successfully!"

if __name__ == '__main__':
    app.run(debug=True)




Submission Guidelines -: Attach Screenshots or command along with explanation and submit in doc(google doc or microsoft doc) format also attach github repo link
